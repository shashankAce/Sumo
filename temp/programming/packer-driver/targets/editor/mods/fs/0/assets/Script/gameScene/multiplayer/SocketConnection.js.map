{"version":3,"sources":["file:///D:/Office/Sumo/assets/Script/gameScene/multiplayer/SocketConnection.ts"],"names":["Component","_decorator","Colyseus","ccclass","property","SocketConnection","start","url","useSSL","hostname","includes","port","client","Client","console","log","connect","room","joinOrCreate","sessionId","onStateChange","state","onLeave","code","e","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AACbC,MAAAA,Q;;;;;;;OAED;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;kCAGjBI,gB,WADZF,OAAO,CAAC,kBAAD,C,oCAAR,MACaE,gBADb,SACsCL,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAY5CM,QAAAA,KAAK,GAAG;AACJ;AACA;;AAEA;AACR;AAEQ,cAAIC,GAAG,GAAI,GAAE,KAAKC,MAAL,GAAc,KAAd,GAAsB,IAAK,MAAK,KAAKC,QAAS,GAAG,CAAC,GAAD,EAAM,EAAN,EAAUC,QAAV,CAAmB,KAAKC,IAAxB,KAAiC,KAAKH,MAAvC,GAAiD,EAAjD,GAAuD,IAAG,KAAKG,IAAK,EAAE,EAAnI;AACA,eAAKC,MAAL,GAAc,IAAI;AAAA;AAAA,oCAASC,MAAb,CAAqB,GAAE,KAAKL,MAAL,GAAc,KAAd,GAAsB,IAAK,MAAK,KAAKC,QAAS,GAAG,CAAC,GAAD,EAAM,EAAN,EAAUC,QAAV,CAAmB,KAAKC,IAAxB,KAAiC,KAAKH,MAAvC,GAAiD,EAAjD,GAAuD,IAAG,KAAKG,IAAK,EAAE,EAA7I,CAAd;AAEAG,UAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBR,GAAI,EAAxC;AACA,eAAKS,OAAL;AACH;;AAGY,cAAPA,OAAO,GAAG;AACZ,cAAI;AACA,iBAAKC,IAAL,GAAY,MAAM,KAAKL,MAAL,CAAYM,YAAZ,CAAyB,UAAzB,CAAlB;AAGAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKE,IAAL,CAAUE,SAA3C;AAEA,iBAAKF,IAAL,CAAUG,aAAV,CAAyBC,KAAD,IAAW;AAC/BP,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,KAA/B;AACH,aAFD;AAIA,iBAAKJ,IAAL,CAAUK,OAAV,CAAmBC,IAAD,IAAU;AACxBT,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,IAAxB;AACH,aAFD;AAIH,WAfD,CAeE,OAAOC,CAAP,EAAU;AACRV,YAAAA,OAAO,CAACW,KAAR,CAAcD,CAAd;AACH;AACJ;;AA9C2C,O,mFAK3CpB,Q;;;;;iBAAoB,W;;+EACpBA,Q;;;;;iBAAgB,I;;iFAChBA,Q;;;;;iBAAkB,K","sourcesContent":["\nimport { Component, _decorator } from 'cc';\nimport Colyseus from 'db://colyseus-sdk/colyseus.js';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SocketConnection')\nexport class SocketConnection extends Component {\n\n    playerName: string;\n    isConnected: boolean;\n\n    @property hostname = \"localhost\";\n    @property port = 2567;\n    @property useSSL = false;\n\n    client!: Colyseus.Client;\n    room!: Colyseus.Room;\n\n    start() {\n        // Instantiate Colyseus Client\n        // connects into (ws|wss)://hostname[:port]\n\n        /* let domain = window.location.href.split('/')[2];\n        let url = \"ws://\" + domain.split(':')[0] + ':2567'; */\n\n        let url = `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}${([443, 80].includes(this.port) || this.useSSL) ? \"\" : `:${this.port}`}`;\n        this.client = new Colyseus.Client(`${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}${([443, 80].includes(this.port) || this.useSSL) ? \"\" : `:${this.port}`}`);\n\n        console.log(`Connecting server to ${url}`);\n        this.connect();\n    }\n\n\n    async connect() {\n        try {\n            this.room = await this.client.joinOrCreate(\"SumoRoom\");\n\n\n            console.log(\"Room joined successfully!\");\n            console.log(\"user's sessionId:\", this.room.sessionId);\n\n            this.room.onStateChange((state) => {\n                console.log(\"onStateChange: \", state);\n            });\n\n            this.room.onLeave((code) => {\n                console.log(\"onLeave:\", code);\n            });\n\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n"]}